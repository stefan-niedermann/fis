name: CI pipeline

on: [ push, pull_request ]

jobs:
#  validation:
#    name: Validate Gradle Wrapper
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Validate Gradle Wrapper
#        uses: gradle/wrapper-validation-action@v1
#
#  lint-ui:
#    name: Frontend Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        working-directory: frontend
#        run: npm ci
#      - name: Run frontend Linter
#        working-directory: frontend
#        run: npm run lint
#
#  test-ui:
#    name: Frontend Unit tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        working-directory: frontend
#        run: npm ci
#      - name: Run frontend Unit tests
#        working-directory: frontend
#        run: npm run test
#
#  e2e-ui:
#    name: Frontend End to End tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        working-directory: frontend
#        run: npm ci
#      - name: Run frontend End to End tests
#        working-directory: frontend
#        run: npm run e2e:mock
#      - name: Upload videos
#        uses: actions/upload-artifact@v2
#        with:
#          name: e2e-mock-videos
#          path: frontend/cypress/videos
#
#  test-backend:
#    name: Backend Unit tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: 17
#      - name: Unit tests
#        run: bash ./gradlew test
#
#  build-ui:
#    name: Build UI
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        working-directory: frontend
#        run: npm ci
#      - name: Build frontend
#        working-directory: frontend
#        run: npm run build
#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: frontend
#          path: frontend/dist
#
#  jar:
#    name: Build JAR
#    needs: build-ui
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Remove frontend source code
#        working-directory: src/main/resources
#        run: rm -rf frontend
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: 17
#      - name: Unstash frontend artifact
#        uses: actions/download-artifact@v2
#        with:
#          name: frontend
#          path: src/main/resources/static
#      - name: Build JAR
#        run: bash ./gradlew assemble
#      - name: Upload JAR
#        uses: actions/upload-artifact@v2
#        with:
#          name: jar
#          path: build/libs/fis*.jar

  e2e-prod:
    name: Production End to End tests
#    needs: jar
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup local FTP server
        run: |
          sudo apt install vsftpd tesseract-ocr
          sudo useradd -m testuser
          echo 'testuser:testuser' | sudo chpasswd
          sudo systemctl start vsftpd
          sleep 3
      - name: Unstash JarFIS
        working-directory: frontend
#        uses: actions/download-artifact@v2
#        with:
#          name: jar
#          path: ./
        run: wget -O fis.jar https://www.niedermann.it/gh.jar || true
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: java -jar fis.jar
          wait-on: 'http://localhost:8080'
          working-directory: frontend
          spec: cypress/integration/prod.spec.ts
          config: baseUrl=http://localhost:8080
          browser: chrome
          headless: true
        env:
          FIS_FTP_HOST: localhost
          FIS_FTP_USERNAME: testuser
          FIS_FTP_PASSWORD: testuser
          FIS_FTP_PATH: ./
          FIS_FTP_POLL_INTERVAL: 1000
          FIS_WEATHER_KEY: a012345678901234567890123456789b
          FIS_OPERATION_DURATION: 5000
          FIS_CLIENT_WEATHER_POLL_INTERVAL: 60000
          FIS_CLIENT_OPERATION_POLL_INTERVAL: 1000
          FIS_CLIENT_HIGHLIGHT: Foo
          CYPRESS_FTP_HOST: locahost
          CYPRESS_FTP_USER: testuser
          CYPRESS_FTP_PASS: testuser
      - name: Upload videos
        uses: actions/upload-artifact@v2
        with:
          name: e2e-prod-videos
          path: frontend/cypress/videos
