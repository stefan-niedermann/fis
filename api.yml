---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "JarFIS"
  description: "API for JarFIS"
  termsOfService: "http://swagger.io/terms/"
  contact:
    name: "Swagger API Team"
  license:
    name: "MIT"
host: "localhost:4200"
basePath: "/api"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /parameter:
    get:
      summary: "Get Parameter"
      description: "Returns environment specific variables for the consumer"
      operationId: "getParameter"
      parameters:
        - name: "If-None-Match"
          type: "string"
          in: header
      produces:
        - "application/json"
      responses:
        "200":
          description: "Configuration parameters"
          schema:
            $ref: "#/definitions/Parameter"
        "304":
          description: "If-None-Match"
  /weather:
    get:
      description: "Returns information about the current weather"
      operationId: "getWeather"
      parameters:
        - name: "If-None-Match"
          type: "string"
          in: header
      produces:
        - "application/json"
      responses:
        "200":
          description: "Current weather"
          schema:
            $ref: "#/definitions/Weather"
        "304":
          description: "If-None-Match"
        "500":
          description: "In case the weather could not be fetched"
  /operation:
    get:
      description: "Information about currently active operations"
      operationId: "getOperation"
      parameters:
        - name: "If-None-Match"
          type: "string"
          in: header
      produces:
        - "application/json"
      responses:
        "200":
          description: "Currently active operation"
          schema:
            $ref: "#/definitions/Operation"
        "202":
          description: "Operation parsing is processing"
        "204":
          description: "Currently no operation is active"
        "304":
          description: "If-None-Match"
definitions:
  Parameter:
    type: "object"
    required:
      - "highlight"
    properties:
      highlight:
        type: "string"
        description: "This term should be highlighted by the consumer, e. g. the name of the firefighter station"
  Weather:
    type: "object"
    required:
      - "temperature"
      - "icon"
      - "isDay"
    properties:
      temperature:
        type: "number"
        format: "float"
      icon:
        $ref: "#/definitions/WeatherIcon"
      isDay:
        type: "boolean"
        description: "Defines whether the current weather information is at day or night"
  WeatherIcon:
    type: "string"
    enum:
      - "angry_clouds"
      - "cloudy"
      - "day_clear"
      - "day_partial_cloud"
      - "day_rain"
      - "day_rain_thunder"
      - "day_sleet"
      - "day_snow"
      - "day_snow_thunder"
      - "fog"
      - "mist"
      - "night_full_moon_clear"
      - "night_full_moon_partial_cloud"
      - "night_full_moon_rain"
      - "night_full_moon_rain_thunder"
      - "night_full_moon_sleet"
      - "night_full_moon_snow"
      - "night_full_moon_snow_thunder"
      - "night_half_moon_clear"
      - "night_half_moon_partial_cloud"
      - "night_half_moon_rain"
      - "night_half_moon_rain_thunder"
      - "night_half_moon_sleet"
      - "night_half_moon_snow"
      - "night_half_moon_snow_thunder"
      - "overcast"
      - "rain"
      - "rain_thunder"
      - "sleet"
      - "snow"
      - "snow_thunder"
      - "thunder"
      - "tornado"
      - "wind"
  Operation:
    type: "object"
    required:
      - "keyword"
      - "tags"
      - "vehicles"
      - "note"
      - "street"
      - "number"
      - "location"
      - "obj"
    properties:
      keyword:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      vehicles:
        type: "array"
        items:
          type: "string"
      note:
        type: "string"
      street:
        type: "string"
      number:
        type: "string"
      location:
        type: "string"
      obj:
        type: "string"