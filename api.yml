openapi: 3.0.1
info:
  title: JarFIS
  description: API for JarFIS
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
  license:
    name: MIT
  version: 1.0.0
servers:
  - url: http://localhost:4200/api
paths:
  /parameter:
    get:
      summary: Get Parameter
      description: Returns environment specific variables for the consumer
      operationId: getParameter
      parameters:
        - name: If-None-Match
          in: header
          schema:
            type: string
      responses:
        200:
          description: Configuration parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientConfiguration'
        304:
          description: If-None-Match
          content: {}
  /weather:
    get:
      description: Returns information about the current weather
      operationId: getWeather
      parameters:
        - name: If-None-Match
          in: header
          schema:
            type: string
      responses:
        200:
          description: Current weather
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weather'
        304:
          description: If-None-Match
          content: {}
        500:
          description: In case the weather could not be fetched
          content: {}
  /operation:
    get:
      description: Information about currently active operations
      operationId: getOperation
      parameters:
        - name: If-None-Match
          in: header
          schema:
            type: string
      responses:
        200:
          description: Currently active operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        202:
          description: Operation parsing is processing
          content: {}
        204:
          description: Currently no operation is active
          content: {}
        304:
          description: If-None-Match
          content: {}
components:
  schemas:
    ClientConfiguration:
      required:
        - highlight
        - operationPollInterval
        - weatherPollInterval
      type: object
      properties:
        weatherPollInterval:
          type: number
          description: Clients should poll for new weather information in this interval
          format: int64
        operationPollInterval:
          type: number
          description: Clients should poll for new operations in this interval
          format: int64
        highlight:
          type: string
          description: This term should be highlighted by the consumer, e. g. the
            name of the firefighter station
    Weather:
      required:
        - icon
        - isDay
        - temperature
      type: object
      properties:
        temperature:
          type: number
          format: float
        icon:
          $ref: '#/components/schemas/WeatherIcon'
        isDay:
          type: boolean
          description: Defines whether the current weather information is at day or
            night
    WeatherIcon:
      type: string
      enum:
        - angry_clouds
        - cloudy
        - day_clear
        - day_partial_cloud
        - day_rain
        - day_rain_thunder
        - day_sleet
        - day_snow
        - day_snow_thunder
        - fog
        - mist
        - night_full_moon_clear
        - night_full_moon_partial_cloud
        - night_full_moon_rain
        - night_full_moon_rain_thunder
        - night_full_moon_sleet
        - night_full_moon_snow
        - night_full_moon_snow_thunder
        - night_half_moon_clear
        - night_half_moon_partial_cloud
        - night_half_moon_rain
        - night_half_moon_rain_thunder
        - night_half_moon_sleet
        - night_half_moon_snow
        - night_half_moon_snow_thunder
        - overcast
        - rain
        - rain_thunder
        - sleet
        - snow
        - snow_thunder
        - thunder
        - tornado
        - wind
    Operation:
      required:
        - keyword
        - location
        - note
        - number
        - obj
        - street
        - tags
        - vehicles
      type: object
      properties:
        keyword:
          type: string
        tags:
          type: array
          items:
            type: string
        vehicles:
          type: array
          items:
            type: string
        note:
          type: string
        street:
          type: string
        number:
          type: string
        location:
          type: string
        obj:
          type: string
